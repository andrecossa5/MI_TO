// Config prova

// Manifest
manifest {
  name = 'mito_benchmark'
  author = 'Andrea Cossa'
  //homePage = 'https://github.com/andrecossa5/MI_TO.git'
  description = 'Mitochondrial variants based transcriptioanl lineage tracing benchmark.'
  mainScript = 'main.nf'
  nextflowVersion = '>=20.01.0'
  version = '0.1'
}

// Profiles
profiles {

  hpcieo {
    executor.name = 'pbspro'
    process.queue = 'workq'
    singularity.enabled = true
    singularity.cacheDir = '~/.singularity'
    singularity.runOptions = '--bind /hpcnfs'
  }
  hpcgarr {
    singularity.enabled = true
    singularity.cacheDir = '~/.singularity'
    singularity.runOptions = '--bind /hpcnfs'
  }
  local {
    docker.enabled = true
    docker.runOptions = '--volume /Users/:/Users/'
  }

}

// Processes
process {

  errorStrategy = 'retry'
  maxRetries = 3
  cpus = 6
  container = { profile.local ? 'acox1/mito_benchmarking:1.7' : 'docker://acox1/mito_benchmarking:1.7' }

}

// Params
params {
    
    //...

}

// Tracing
trace {
  enabled = true
  file = "trace.txt"
}













singularity { 
    enabled = true   
    runOptions = ' --bind /data/ '
    cacheDir = ' ./.singularity/ '
}

    container = 'docker://acox1/mito_benchmark:1.2'  
    executor = 'pbspro'   
    queue = 'nocg_workq'

process {    
    container = 'docker://acox1/mito_benchmark:1.7' 
    cpus = 6 // Temporary
    memory = '5 G' // Temporary
}

trace {
    enabled = true
    file = './trace.txt'
}


docker {
    enabled = true
    runOptions = '--volume /Users/:/Users/'
}

process {   
    container = 'acox1/mito_benchmark:1.2'

    // Resources 
    // maxForks = min((total_CPUs / CPUs_per_job) // wait_time, queue_size)   
    cpus = 4 // Temporary
    memory = '8 G' // Temporary
    maxForks = 2 // Temporary
}

trace {
    enabled = true
    file = './trace.txt'
}